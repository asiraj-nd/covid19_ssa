polygon(c(rev(newx2), newx2), c(rev(thissim[3,]), thissim[1,]),
col=rgb(0.0,.25,.75,.45),border=NA)
lines(newx2,thissim[2,],  col='dodgerblue4', lty=2, lwd=2)
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1, labels=FALSE)
### placement of 95%CI
placer=1
if (which(tipper==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(xl1,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(1, labels=FALSE)
text(20,ylm2[2]*.9/2.7, 'A', cex=1)
###### second
scenall<- read.csv("../data/afr/afr_scens_short.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull_sd25.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
par(mar=c(4,4.5,2,0))
scen = printscni[2]
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim2<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim2<- cbind(thissim2,c(thisquant))
}
ylm2= c(0,max(thissim2))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white',yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim2[3,]), thissim2[1,]),
col=rgb(0.10,.5,.25,.45),border=NA)
lines(newx2,thissim2[2,], col='forestgreen', lty=2, lwd=2)
### placement of 95%CI
placer=1
if (which(tipper ==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(xl1,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(labels=paste(seq(0,ylm2[2],ystep*2)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep*2), las=1, cex.axis=1)
axis(1, labels=FALSE)
axis(1)
mtext("Time (days)", side=1, line=2.5, cex=.75)
text(20,ylm2[2]*.9/2.7, 'B', cex=1)
######## Urban substitution curve
par(mar=c(4,8.5,2,2))
###### urban
ro=3
sd<- seq(0,1, 0.01)
fm<- seq(0,1, 0.01)
length(fm)
reff_all<- NULL
for (i in 1: length(sd)) {
r_ef<- NULL
for (j in 1:length(sd)) {
r_ef<- c(r_ef,ro* (1-sd[i])* (1-fm[j]*0.25))
}
reff_all<- rbind(reff_all,r_ef)
}
dim(cbind(sd,reff_all))
which(sd==.33)
orig= reff_all[34,1]
reff_all[34:1,1]
j=33
allvals<- NULL
allxs<- NULL
for (j in 33:1) {
minx<- which.min(abs(reff_all[j,]-orig))
allvals<- c(allvals,reff_all[j,minx])
allxs<- c(allxs,minx)
}
allxs<- allxs[which(allxs<101)]
allvals<- allvals[1:length(allxs)]
fm[allxs]
xvs<- c((sd[33:1][1:length(allxs)][length(allxs):1]) *100,33)
yvs<- c(fm[allxs][length(allxs):1]*100,0)
#yvs<- ma(yvs)
gam.object<-gam(yvs~s(xvs))
predict.gam(gam.object)
plot(xvs ,predict.gam(gam.object),
type='l', ylim = c(0,100), xlim= c(33,10), ylab="Facemask \n substitution %", xlab= 'Urban - Relaxing from 33% to (%)', col='black')
lines(c(25,25), c(0,43), lty=2,col='black')
lines(c(34,25), c(43,43), lty=2,col='black')
abline(v=(seq(30,10,-5)), col="gray", lty=3)
abline(h=(seq(0,100,20)), col="gray", lty=3)
points(33,0, pch=18, cex=1.5,col='black')
text(32, 90, "C", cex=1)
## second column
### read scenario setup file
scenall<- read.csv("../data/afr/afr_scens_short.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
ndays<-ncol(allsims.pack)
x = 0:ndays
par(mar=c(0,4,2,2))
printscni<-    c(118,120)
### first
scen = printscni[1]
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim<- cbind(thissim,c(thisquant))
}
newx2<- 1:ndays
ylm2= c(0,max(thissim))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white', yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim[3,]), thissim[1,]),
col=rgb(0.0,.25,.75,.45),border=NA)
lines(newx2,thissim[2,],  col='dodgerblue4', lty=2, lwd=2)
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1, labels=FALSE)
### placement of 95%CI
placer=1
if (which(tipper==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(20,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
scenall<- read.csv("../data/afr/afr_scens_short_sd25.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull_sd25.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
scen = printscni[2]
par(mar=c(4,4,2,2))
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
thissim2<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim2<- cbind(thissim2,c(thisquant))
}
ylm2= c(0,max(thissim2))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white',yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim2[3,]), thissim2[1,]),
col=rgb(0.10,.5,.25,.45),border=NA)
lines(newx2,thissim2[2,], col='forestgreen', lty=2, lwd=2)
### placement of 95%CI
placer=1
if (which(tipper ==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(20,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1)
mtext("Time (days)", side=1, line=2.5, cex=.75)
text(20,ylm2[2]*.9/2.7, 'E', cex=1)
par(mar=c(4,4,2,7))
ro=2
sd<- seq(0,1, 0.01)
fm<- seq(0,1, 0.01)
length(fm)
reff_all<- NULL
for (i in 1: length(sd)) {
r_ef<- NULL
for (j in 1:length(sd)) {
r_ef<- c(r_ef,ro* (1-sd[i])* (1-fm[j]*0.25))
}
reff_all<- rbind(reff_all,r_ef)
}
dim(cbind(sd,reff_all))
orig= reff_all[26,1]
reff_all[,1]
allvals<- NULL
allxs<- NULL
for (j in 25:1) {
minx<- which.min(abs(reff_all[j,]-orig))
allvals<- c(allvals,reff_all[j,minx])
allxs<- c(allxs,minx)
}
allxs<- allxs[which(allxs<101)]
allvals<- allvals[1:length(allxs)]
fm[allxs]
xvs<- c((sd[25:1][1:length(allxs)][length(allxs):1]) *100,25)
yvs<- c(fm[allxs][length(allxs):1]*100,0)
gam.object<-gam(yvs~s(xvs))
predict.gam(gam.object)
plot(xvs ,predict.gam(gam.object),
type='l', ylim = c(0,100), xlim= c(25,5), ylab="",
xlab= 'Rural - Relaxing from 25% to (%)', col='black',yaxt='n')
lines(c(15,15), c(0,47), lty=2,col='black')
lines(c(26,15), c(47,47), lty=2,col='black')
abline(v=(seq(30,5,-5)), col="gray", lty=3)
abline(h=(seq(0,100,20)), col="gray", lty=3)
points(25,0, pch=18, cex=1.5, col='black')
axis(2, labels=FALSE)
text(24, 90, "F", cex=1)
pdf(file = paste('../plots/afr/fig_05.pdf', sep=""), height = 4.2, width = 4.2, pointsize=1.44)
layout(matrix(1:6, nrow=3), heights= c(1,1.2,1),widths= c(1,1.075))
par(mar=c(0,4.5,2,0))
#### first column
### read scenario setup file
scenall<- read.csv("../data/afr/afr_scens_short.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
ndays<-ncol(allsims.pack)
x = 0:ndays
printscni<-    c(10,12)
### first
scen = printscni[1]
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim<- cbind(thissim,c(thisquant))
}
newx2<- 1:ndays
ylm2= c(0,max(thissim))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white', yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim[3,]), thissim[1,]),
col=rgb(0.0,.25,.75,.45),border=NA)
lines(newx2,thissim[2,],  col='dodgerblue4', lty=2, lwd=2)
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1, labels=FALSE)
### placement of 95%CI
placer=1
if (which(tipper==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(xl1,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(1, labels=FALSE)
text(20,ylm2[2]*.9/2.7, 'A', cex=1)
###### second
scenall<- read.csv("../data/afr/afr_scens_short_sd25.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull_sd25.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
par(mar=c(4,4.5,2,0))
scen = printscni[2]
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim2<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim2<- cbind(thissim2,c(thisquant))
}
ylm2= c(0,max(thissim2))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white',yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim2[3,]), thissim2[1,]),
col=rgb(0.10,.5,.25,.45),border=NA)
lines(newx2,thissim2[2,], col='forestgreen', lty=2, lwd=2)
### placement of 95%CI
placer=1
if (which(tipper ==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(xl1,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(xl1,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(labels=paste(seq(0,ylm2[2],ystep*2)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep*2), las=1, cex.axis=1)
axis(1, labels=FALSE)
axis(1)
mtext("Time (days)", side=1, line=2.5, cex=.75)
text(20,ylm2[2]*.9/2.7, 'B', cex=1)
######## Urban substitution curve
par(mar=c(4,8.5,2,2))
###### urban
ro=3
sd<- seq(0,1, 0.01)
fm<- seq(0,1, 0.01)
length(fm)
reff_all<- NULL
for (i in 1: length(sd)) {
r_ef<- NULL
for (j in 1:length(sd)) {
r_ef<- c(r_ef,ro* (1-sd[i])* (1-fm[j]*0.25))
}
reff_all<- rbind(reff_all,r_ef)
}
dim(cbind(sd,reff_all))
which(sd==.33)
orig= reff_all[34,1]
reff_all[34:1,1]
j=33
allvals<- NULL
allxs<- NULL
for (j in 33:1) {
minx<- which.min(abs(reff_all[j,]-orig))
allvals<- c(allvals,reff_all[j,minx])
allxs<- c(allxs,minx)
}
allxs<- allxs[which(allxs<101)]
allvals<- allvals[1:length(allxs)]
fm[allxs]
xvs<- c((sd[33:1][1:length(allxs)][length(allxs):1]) *100,33)
yvs<- c(fm[allxs][length(allxs):1]*100,0)
#yvs<- ma(yvs)
gam.object<-gam(yvs~s(xvs))
predict.gam(gam.object)
plot(xvs ,predict.gam(gam.object),
type='l', ylim = c(0,100), xlim= c(33,10), ylab="Facemask \n substitution %", xlab= 'Urban - Relaxing from 33% to (%)', col='black')
lines(c(25,25), c(0,43), lty=2,col='black')
lines(c(34,25), c(43,43), lty=2,col='black')
abline(v=(seq(30,10,-5)), col="gray", lty=3)
abline(h=(seq(0,100,20)), col="gray", lty=3)
points(33,0, pch=18, cex=1.5,col='black')
text(32, 90, "C", cex=1)
## second column
### read scenario setup file
scenall<- read.csv("../data/afr/afr_scens_short.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
ndays<-ncol(allsims.pack)
x = 0:ndays
par(mar=c(0,4,2,2))
printscni<-    c(118,120)
### first
scen = printscni[1]
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim<- cbind(thissim,c(thisquant))
}
newx2<- 1:ndays
ylm2= c(0,max(thissim))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white', yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim[3,]), thissim[1,]),
col=rgb(0.0,.25,.75,.45),border=NA)
lines(newx2,thissim[2,],  col='dodgerblue4', lty=2, lwd=2)
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1, labels=FALSE)
### placement of 95%CI
placer=1
if (which(tipper==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(20,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(1, labels=FALSE)
text(20,ylm2[2]*.9/2.7, 'D', cex=1)
###### second
scenall<- read.csv("../data/afr/afr_scens_short_sd25.csv", stringsAsFactors = FALSE)
### read in simulation daily infections
allsims.pack<-read.csv("../output/afr/all_simulations_AFR_weibull_sd25.csv", stringsAsFactors = FALSE)[,-(1:2)]
allsims.pack<- allsims.pack[,1:point_t]
scen = printscni[2]
par(mar=c(4,4,2,2))
rower<- (1:iterlen)+(scen-1)*iterlen
realistic_r<- which(allsims.pack[rower,1] <  (scenall[scen,4]*2)) # remove unrealistic doubling - rare events
dcases<- allsims.pack[rower,] [realistic_r,]
tipper = apply(dcases,2,function(tr) {quantile(ma(tr,7),p=0.5, na.rm=T)})
cumx<- t(apply(dcases,1, cumsum))
totalc<- c(quantile(cumx[,ndays],p=c(0.025,.5,0.975), na.rm=TRUE))
cumcases<- t(apply(dcases,1, cumsum))
thissim2<- NULL
for (j in 1:ndays) {
thisday<- cumcases[,j]
thisquant<- c(quantile(thisday,p=c(0.025,.5,0.975), na.rm=TRUE))
thissim2<- cbind(thissim2,c(thisquant))
}
ylm2= c(0,max(thissim2))
yer<- seq(ylm2[1],ylm2[2],length.out=6)
ystep=floor(yer[2]/ 10^floor(log10(yer[2])))*10^floor(log10(yer[2]))
plot(0,0,xlim=c(0,max(newx2)),ylim=ylm2, col='white',yaxt='n',
xaxt='n',xlab='', , ylab='', main='',las=3,xaxs='i',yaxs='i')
polygon(c(rev(newx2), newx2), c(rev(thissim2[3,]), thissim2[1,]),
col=rgb(0.10,.5,.25,.45),border=NA)
lines(newx2,thissim2[2,], col='forestgreen', lty=2, lwd=2)
### placement of 95%CI
placer=1
if (which(tipper ==max(tipper, na.rm=T))[1] < (ndays/3)) placer = 2
if (placer ==1)         xl1 = max(newx2)/80
if (placer ==2)         xl1 = max(newx2)*.6
klab<- c(round(totalc[2]/10^3,1),round(totalc[1]/10^3,1),round(totalc[3]/10^3,1))
klab<-cbind(klab,'k')
klab[which(klab[,1]<1),2]<- ""
klab[which(klab[,1]<1),1]<- round(as.numeric(klab[which(klab[,1]<1),1])*10^3,0)
text(20,ylm2[2]*.9, paste("Total:",sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.83, paste("",klab[1,1],klab[1,2],sep=""),cex=0.8, pos=4, col='black')
text(20,ylm2[2]*.76, paste("(",klab[2,1],klab[2,2],"-",klab[3,1],klab[3,2],")",sep=""),cex=0.8, pos=4, col='black')
axis(labels=paste(seq(0,ylm2[2],ystep)/10^3,"k",sep=""), 2, at= seq(0,ylm2[2],ystep), las=1, cex.axis=1)
axis(1)
mtext("Time (days)", side=1, line=2.5, cex=.75)
text(20,ylm2[2]*.9/2.7, 'E', cex=1)
##### Rural substitution curve
par(mar=c(4,4,2,7))
ro=2
sd<- seq(0,1, 0.01)
fm<- seq(0,1, 0.01)
length(fm)
reff_all<- NULL
for (i in 1: length(sd)) {
r_ef<- NULL
for (j in 1:length(sd)) {
r_ef<- c(r_ef,ro* (1-sd[i])* (1-fm[j]*0.25))
}
reff_all<- rbind(reff_all,r_ef)
}
orig= reff_all[26,1]
reff_all[,1]
allvals<- NULL
allxs<- NULL
for (j in 25:1) {
minx<- which.min(abs(reff_all[j,]-orig))
allvals<- c(allvals,reff_all[j,minx])
allxs<- c(allxs,minx)
}
allxs<- allxs[which(allxs<101)]
allvals<- allvals[1:length(allxs)]
fm[allxs]
xvs<- c((sd[25:1][1:length(allxs)][length(allxs):1]) *100,25)
yvs<- c(fm[allxs][length(allxs):1]*100,0)
gam.object<-gam(yvs~s(xvs))
predict.gam(gam.object)
plot(xvs ,predict.gam(gam.object),
type='l', ylim = c(0,100), xlim= c(25,5), ylab="",
xlab= 'Rural - Relaxing from 25% to (%)', col='black',yaxt='n')
lines(c(15,15), c(0,47), lty=2,col='black')
lines(c(26,15), c(47,47), lty=2,col='black')
abline(v=(seq(30,5,-5)), col="gray", lty=3)
abline(h=(seq(0,100,20)), col="gray", lty=3)
points(25,0, pch=18, cex=1.5, col='black')
axis(2, labels=FALSE)
text(24, 90, "F", cex=1)
dev.off()
